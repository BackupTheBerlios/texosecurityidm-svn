/**
* This file is part of WSSecurityPolicyEditor.
* Copyright (c) 2011 Fraunhofer FOKUS. All Rights Reserved
* Authors: Tom Sattler
* 
* WSSecurityPolicyEditor is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* any later version.
*
* WSSecurityPolicyEditor is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with WSSecurityPolicyEditor.  If not, see <http://www.gnu.org/licenses/>.
* 
* For more information, please contact Fraunhofer FOKUS at this
* address: elankontakt [at] fokus [dot] fraunhofer [dot] de
* http://www.fokus.fraunhofer.de
*/
package org.open.oasis.docs.ws.sx.ws.trust.wstrust.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.open.oasis.docs.ws.sx.ws.trust.wstrust.util._200512AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class _200512ItemProviderAdapterFactory extends _200512AdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public _200512ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.AllowPostdatingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllowPostdatingTypeItemProvider allowPostdatingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.AllowPostdatingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllowPostdatingTypeAdapter() {
		if (allowPostdatingTypeItemProvider == null) {
			allowPostdatingTypeItemProvider = new AllowPostdatingTypeItemProvider(this);
		}

		return allowPostdatingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.AuthenticatorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AuthenticatorTypeItemProvider authenticatorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.AuthenticatorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAuthenticatorTypeAdapter() {
		if (authenticatorTypeItemProvider == null) {
			authenticatorTypeItemProvider = new AuthenticatorTypeItemProvider(this);
		}

		return authenticatorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.BinaryExchangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryExchangeTypeItemProvider binaryExchangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.BinaryExchangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryExchangeTypeAdapter() {
		if (binaryExchangeTypeItemProvider == null) {
			binaryExchangeTypeItemProvider = new BinaryExchangeTypeItemProvider(this);
		}

		return binaryExchangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.BinarySecretType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinarySecretTypeItemProvider binarySecretTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.BinarySecretType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinarySecretTypeAdapter() {
		if (binarySecretTypeItemProvider == null) {
			binarySecretTypeItemProvider = new BinarySecretTypeItemProvider(this);
		}

		return binarySecretTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.CancelTargetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CancelTargetTypeItemProvider cancelTargetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.CancelTargetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCancelTargetTypeAdapter() {
		if (cancelTargetTypeItemProvider == null) {
			cancelTargetTypeItemProvider = new CancelTargetTypeItemProvider(this);
		}

		return cancelTargetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ClaimsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClaimsTypeItemProvider claimsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ClaimsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClaimsTypeAdapter() {
		if (claimsTypeItemProvider == null) {
			claimsTypeItemProvider = new ClaimsTypeItemProvider(this);
		}

		return claimsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.DelegateToType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DelegateToTypeItemProvider delegateToTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.DelegateToType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDelegateToTypeAdapter() {
		if (delegateToTypeItemProvider == null) {
			delegateToTypeItemProvider = new DelegateToTypeItemProvider(this);
		}

		return delegateToTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.EncryptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EncryptionTypeItemProvider encryptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.EncryptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEncryptionTypeAdapter() {
		if (encryptionTypeItemProvider == null) {
			encryptionTypeItemProvider = new EncryptionTypeItemProvider(this);
		}

		return encryptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.EntropyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntropyTypeItemProvider entropyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.EntropyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntropyTypeAdapter() {
		if (entropyTypeItemProvider == null) {
			entropyTypeItemProvider = new EntropyTypeItemProvider(this);
		}

		return entropyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.KeyExchangeTokenType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyExchangeTokenTypeItemProvider keyExchangeTokenTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.KeyExchangeTokenType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyExchangeTokenTypeAdapter() {
		if (keyExchangeTokenTypeItemProvider == null) {
			keyExchangeTokenTypeItemProvider = new KeyExchangeTokenTypeItemProvider(this);
		}

		return keyExchangeTokenTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.LifetimeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LifetimeTypeItemProvider lifetimeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.LifetimeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLifetimeTypeAdapter() {
		if (lifetimeTypeItemProvider == null) {
			lifetimeTypeItemProvider = new LifetimeTypeItemProvider(this);
		}

		return lifetimeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.OnBehalfOfType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnBehalfOfTypeItemProvider onBehalfOfTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.OnBehalfOfType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnBehalfOfTypeAdapter() {
		if (onBehalfOfTypeItemProvider == null) {
			onBehalfOfTypeItemProvider = new OnBehalfOfTypeItemProvider(this);
		}

		return onBehalfOfTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ParticipantsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParticipantsTypeItemProvider participantsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ParticipantsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParticipantsTypeAdapter() {
		if (participantsTypeItemProvider == null) {
			participantsTypeItemProvider = new ParticipantsTypeItemProvider(this);
		}

		return participantsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ParticipantType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParticipantTypeItemProvider participantTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ParticipantType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParticipantTypeAdapter() {
		if (participantTypeItemProvider == null) {
			participantTypeItemProvider = new ParticipantTypeItemProvider(this);
		}

		return participantTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ProofEncryptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProofEncryptionTypeItemProvider proofEncryptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ProofEncryptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProofEncryptionTypeAdapter() {
		if (proofEncryptionTypeItemProvider == null) {
			proofEncryptionTypeItemProvider = new ProofEncryptionTypeItemProvider(this);
		}

		return proofEncryptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RenewingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenewingTypeItemProvider renewingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RenewingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenewingTypeAdapter() {
		if (renewingTypeItemProvider == null) {
			renewingTypeItemProvider = new RenewingTypeItemProvider(this);
		}

		return renewingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RenewTargetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenewTargetTypeItemProvider renewTargetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RenewTargetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenewTargetTypeAdapter() {
		if (renewTargetTypeItemProvider == null) {
			renewTargetTypeItemProvider = new RenewTargetTypeItemProvider(this);
		}

		return renewTargetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedProofTokenType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestedProofTokenTypeItemProvider requestedProofTokenTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedProofTokenType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestedProofTokenTypeAdapter() {
		if (requestedProofTokenTypeItemProvider == null) {
			requestedProofTokenTypeItemProvider = new RequestedProofTokenTypeItemProvider(this);
		}

		return requestedProofTokenTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestedReferenceTypeItemProvider requestedReferenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestedReferenceTypeAdapter() {
		if (requestedReferenceTypeItemProvider == null) {
			requestedReferenceTypeItemProvider = new RequestedReferenceTypeItemProvider(this);
		}

		return requestedReferenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedSecurityTokenType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestedSecurityTokenTypeItemProvider requestedSecurityTokenTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedSecurityTokenType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestedSecurityTokenTypeAdapter() {
		if (requestedSecurityTokenTypeItemProvider == null) {
			requestedSecurityTokenTypeItemProvider = new RequestedSecurityTokenTypeItemProvider(this);
		}

		return requestedSecurityTokenTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedTokenCancelledType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestedTokenCancelledTypeItemProvider requestedTokenCancelledTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestedTokenCancelledType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestedTokenCancelledTypeAdapter() {
		if (requestedTokenCancelledTypeItemProvider == null) {
			requestedTokenCancelledTypeItemProvider = new RequestedTokenCancelledTypeItemProvider(this);
		}

		return requestedTokenCancelledTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestKETType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestKETTypeItemProvider requestKETTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestKETType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestKETTypeAdapter() {
		if (requestKETTypeItemProvider == null) {
			requestKETTypeItemProvider = new RequestKETTypeItemProvider(this);
		}

		return requestKETTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestSecurityTokenCollectionTypeItemProvider requestSecurityTokenCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestSecurityTokenCollectionTypeAdapter() {
		if (requestSecurityTokenCollectionTypeItemProvider == null) {
			requestSecurityTokenCollectionTypeItemProvider = new RequestSecurityTokenCollectionTypeItemProvider(this);
		}

		return requestSecurityTokenCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenResponseCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestSecurityTokenResponseCollectionTypeItemProvider requestSecurityTokenResponseCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenResponseCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestSecurityTokenResponseCollectionTypeAdapter() {
		if (requestSecurityTokenResponseCollectionTypeItemProvider == null) {
			requestSecurityTokenResponseCollectionTypeItemProvider = new RequestSecurityTokenResponseCollectionTypeItemProvider(this);
		}

		return requestSecurityTokenResponseCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenResponseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestSecurityTokenResponseTypeItemProvider requestSecurityTokenResponseTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenResponseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestSecurityTokenResponseTypeAdapter() {
		if (requestSecurityTokenResponseTypeItemProvider == null) {
			requestSecurityTokenResponseTypeItemProvider = new RequestSecurityTokenResponseTypeItemProvider(this);
		}

		return requestSecurityTokenResponseTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestSecurityTokenTypeItemProvider requestSecurityTokenTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.RequestSecurityTokenType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestSecurityTokenTypeAdapter() {
		if (requestSecurityTokenTypeItemProvider == null) {
			requestSecurityTokenTypeItemProvider = new RequestSecurityTokenTypeItemProvider(this);
		}

		return requestSecurityTokenTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.SignChallengeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignChallengeTypeItemProvider signChallengeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.SignChallengeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignChallengeTypeAdapter() {
		if (signChallengeTypeItemProvider == null) {
			signChallengeTypeItemProvider = new SignChallengeTypeItemProvider(this);
		}

		return signChallengeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.StatusType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StatusTypeItemProvider statusTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.StatusType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStatusTypeAdapter() {
		if (statusTypeItemProvider == null) {
			statusTypeItemProvider = new StatusTypeItemProvider(this);
		}

		return statusTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.UseKeyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UseKeyTypeItemProvider useKeyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.UseKeyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUseKeyTypeAdapter() {
		if (useKeyTypeItemProvider == null) {
			useKeyTypeItemProvider = new UseKeyTypeItemProvider(this);
		}

		return useKeyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ValidateTargetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateTargetTypeItemProvider validateTargetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.open.oasis.docs.ws.sx.ws.trust.wstrust.ValidateTargetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateTargetTypeAdapter() {
		if (validateTargetTypeItemProvider == null) {
			validateTargetTypeItemProvider = new ValidateTargetTypeItemProvider(this);
		}

		return validateTargetTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (allowPostdatingTypeItemProvider != null) allowPostdatingTypeItemProvider.dispose();
		if (authenticatorTypeItemProvider != null) authenticatorTypeItemProvider.dispose();
		if (binaryExchangeTypeItemProvider != null) binaryExchangeTypeItemProvider.dispose();
		if (binarySecretTypeItemProvider != null) binarySecretTypeItemProvider.dispose();
		if (cancelTargetTypeItemProvider != null) cancelTargetTypeItemProvider.dispose();
		if (claimsTypeItemProvider != null) claimsTypeItemProvider.dispose();
		if (delegateToTypeItemProvider != null) delegateToTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (encryptionTypeItemProvider != null) encryptionTypeItemProvider.dispose();
		if (entropyTypeItemProvider != null) entropyTypeItemProvider.dispose();
		if (keyExchangeTokenTypeItemProvider != null) keyExchangeTokenTypeItemProvider.dispose();
		if (lifetimeTypeItemProvider != null) lifetimeTypeItemProvider.dispose();
		if (onBehalfOfTypeItemProvider != null) onBehalfOfTypeItemProvider.dispose();
		if (participantsTypeItemProvider != null) participantsTypeItemProvider.dispose();
		if (participantTypeItemProvider != null) participantTypeItemProvider.dispose();
		if (proofEncryptionTypeItemProvider != null) proofEncryptionTypeItemProvider.dispose();
		if (renewingTypeItemProvider != null) renewingTypeItemProvider.dispose();
		if (renewTargetTypeItemProvider != null) renewTargetTypeItemProvider.dispose();
		if (requestedProofTokenTypeItemProvider != null) requestedProofTokenTypeItemProvider.dispose();
		if (requestedReferenceTypeItemProvider != null) requestedReferenceTypeItemProvider.dispose();
		if (requestedSecurityTokenTypeItemProvider != null) requestedSecurityTokenTypeItemProvider.dispose();
		if (requestedTokenCancelledTypeItemProvider != null) requestedTokenCancelledTypeItemProvider.dispose();
		if (requestKETTypeItemProvider != null) requestKETTypeItemProvider.dispose();
		if (requestSecurityTokenCollectionTypeItemProvider != null) requestSecurityTokenCollectionTypeItemProvider.dispose();
		if (requestSecurityTokenResponseCollectionTypeItemProvider != null) requestSecurityTokenResponseCollectionTypeItemProvider.dispose();
		if (requestSecurityTokenResponseTypeItemProvider != null) requestSecurityTokenResponseTypeItemProvider.dispose();
		if (requestSecurityTokenTypeItemProvider != null) requestSecurityTokenTypeItemProvider.dispose();
		if (signChallengeTypeItemProvider != null) signChallengeTypeItemProvider.dispose();
		if (statusTypeItemProvider != null) statusTypeItemProvider.dispose();
		if (useKeyTypeItemProvider != null) useKeyTypeItemProvider.dispose();
		if (validateTargetTypeItemProvider != null) validateTargetTypeItemProvider.dispose();
	}

}
