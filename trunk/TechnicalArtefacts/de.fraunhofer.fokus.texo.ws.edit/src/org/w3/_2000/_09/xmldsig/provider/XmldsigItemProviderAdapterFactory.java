/**
* This file is part of WSSecurityPolicyEditor.
* Copyright (c) 2011 Fraunhofer FOKUS. All Rights Reserved
* Authors: Tom Sattler
* 
* WSSecurityPolicyEditor is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* any later version.
*
* WSSecurityPolicyEditor is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with WSSecurityPolicyEditor.  If not, see <http://www.gnu.org/licenses/>.
* 
* For more information, please contact Fraunhofer FOKUS at this
* address: elankontakt [at] fokus [dot] fraunhofer [dot] de
* http://www.fokus.fraunhofer.de
*/
package org.w3._2000._09.xmldsig.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.w3._2000._09.xmldsig.util.XmldsigAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class XmldsigItemProviderAdapterFactory extends XmldsigAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XmldsigItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.CanonicalizationMethodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CanonicalizationMethodTypeItemProvider canonicalizationMethodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.CanonicalizationMethodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCanonicalizationMethodTypeAdapter() {
		if (canonicalizationMethodTypeItemProvider == null) {
			canonicalizationMethodTypeItemProvider = new CanonicalizationMethodTypeItemProvider(this);
		}

		return canonicalizationMethodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.CanonicalizationMethodType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CanonicalizationMethodType1ItemProvider canonicalizationMethodType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.CanonicalizationMethodType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCanonicalizationMethodType1Adapter() {
		if (canonicalizationMethodType1ItemProvider == null) {
			canonicalizationMethodType1ItemProvider = new CanonicalizationMethodType1ItemProvider(this);
		}

		return canonicalizationMethodType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.DigestMethodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DigestMethodTypeItemProvider digestMethodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.DigestMethodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDigestMethodTypeAdapter() {
		if (digestMethodTypeItemProvider == null) {
			digestMethodTypeItemProvider = new DigestMethodTypeItemProvider(this);
		}

		return digestMethodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.DigestMethodType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DigestMethodType1ItemProvider digestMethodType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.DigestMethodType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDigestMethodType1Adapter() {
		if (digestMethodType1ItemProvider == null) {
			digestMethodType1ItemProvider = new DigestMethodType1ItemProvider(this);
		}

		return digestMethodType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.DSAKeyValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DSAKeyValueTypeItemProvider dsaKeyValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.DSAKeyValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDSAKeyValueTypeAdapter() {
		if (dsaKeyValueTypeItemProvider == null) {
			dsaKeyValueTypeItemProvider = new DSAKeyValueTypeItemProvider(this);
		}

		return dsaKeyValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.DSAKeyValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DSAKeyValueType1ItemProvider dsaKeyValueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.DSAKeyValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDSAKeyValueType1Adapter() {
		if (dsaKeyValueType1ItemProvider == null) {
			dsaKeyValueType1ItemProvider = new DSAKeyValueType1ItemProvider(this);
		}

		return dsaKeyValueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.KeyInfoType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyInfoTypeItemProvider keyInfoTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.KeyInfoType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyInfoTypeAdapter() {
		if (keyInfoTypeItemProvider == null) {
			keyInfoTypeItemProvider = new KeyInfoTypeItemProvider(this);
		}

		return keyInfoTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.KeyInfoType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyInfoType1ItemProvider keyInfoType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.KeyInfoType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyInfoType1Adapter() {
		if (keyInfoType1ItemProvider == null) {
			keyInfoType1ItemProvider = new KeyInfoType1ItemProvider(this);
		}

		return keyInfoType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.KeyValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyValueTypeItemProvider keyValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.KeyValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyValueTypeAdapter() {
		if (keyValueTypeItemProvider == null) {
			keyValueTypeItemProvider = new KeyValueTypeItemProvider(this);
		}

		return keyValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.KeyValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyValueType1ItemProvider keyValueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.KeyValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyValueType1Adapter() {
		if (keyValueType1ItemProvider == null) {
			keyValueType1ItemProvider = new KeyValueType1ItemProvider(this);
		}

		return keyValueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.ManifestType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManifestTypeItemProvider manifestTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.ManifestType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManifestTypeAdapter() {
		if (manifestTypeItemProvider == null) {
			manifestTypeItemProvider = new ManifestTypeItemProvider(this);
		}

		return manifestTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.ManifestType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManifestType1ItemProvider manifestType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.ManifestType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManifestType1Adapter() {
		if (manifestType1ItemProvider == null) {
			manifestType1ItemProvider = new ManifestType1ItemProvider(this);
		}

		return manifestType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.ObjectType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeItemProvider objectTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.ObjectType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeAdapter() {
		if (objectTypeItemProvider == null) {
			objectTypeItemProvider = new ObjectTypeItemProvider(this);
		}

		return objectTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.ObjectType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectType1ItemProvider objectType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.ObjectType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectType1Adapter() {
		if (objectType1ItemProvider == null) {
			objectType1ItemProvider = new ObjectType1ItemProvider(this);
		}

		return objectType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.PGPDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PGPDataTypeItemProvider pgpDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.PGPDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPGPDataTypeAdapter() {
		if (pgpDataTypeItemProvider == null) {
			pgpDataTypeItemProvider = new PGPDataTypeItemProvider(this);
		}

		return pgpDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.PGPDataType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PGPDataType1ItemProvider pgpDataType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.PGPDataType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPGPDataType1Adapter() {
		if (pgpDataType1ItemProvider == null) {
			pgpDataType1ItemProvider = new PGPDataType1ItemProvider(this);
		}

		return pgpDataType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.ReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceTypeItemProvider referenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.ReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceTypeAdapter() {
		if (referenceTypeItemProvider == null) {
			referenceTypeItemProvider = new ReferenceTypeItemProvider(this);
		}

		return referenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.ReferenceType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceType1ItemProvider referenceType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.ReferenceType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceType1Adapter() {
		if (referenceType1ItemProvider == null) {
			referenceType1ItemProvider = new ReferenceType1ItemProvider(this);
		}

		return referenceType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.RetrievalMethodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RetrievalMethodTypeItemProvider retrievalMethodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.RetrievalMethodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRetrievalMethodTypeAdapter() {
		if (retrievalMethodTypeItemProvider == null) {
			retrievalMethodTypeItemProvider = new RetrievalMethodTypeItemProvider(this);
		}

		return retrievalMethodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.RetrievalMethodType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RetrievalMethodType1ItemProvider retrievalMethodType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.RetrievalMethodType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRetrievalMethodType1Adapter() {
		if (retrievalMethodType1ItemProvider == null) {
			retrievalMethodType1ItemProvider = new RetrievalMethodType1ItemProvider(this);
		}

		return retrievalMethodType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.RSAKeyValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RSAKeyValueTypeItemProvider rsaKeyValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.RSAKeyValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRSAKeyValueTypeAdapter() {
		if (rsaKeyValueTypeItemProvider == null) {
			rsaKeyValueTypeItemProvider = new RSAKeyValueTypeItemProvider(this);
		}

		return rsaKeyValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.RSAKeyValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RSAKeyValueType1ItemProvider rsaKeyValueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.RSAKeyValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRSAKeyValueType1Adapter() {
		if (rsaKeyValueType1ItemProvider == null) {
			rsaKeyValueType1ItemProvider = new RSAKeyValueType1ItemProvider(this);
		}

		return rsaKeyValueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignatureMethodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignatureMethodTypeItemProvider signatureMethodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignatureMethodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignatureMethodTypeAdapter() {
		if (signatureMethodTypeItemProvider == null) {
			signatureMethodTypeItemProvider = new SignatureMethodTypeItemProvider(this);
		}

		return signatureMethodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignatureMethodType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignatureMethodType1ItemProvider signatureMethodType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignatureMethodType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignatureMethodType1Adapter() {
		if (signatureMethodType1ItemProvider == null) {
			signatureMethodType1ItemProvider = new SignatureMethodType1ItemProvider(this);
		}

		return signatureMethodType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignaturePropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignaturePropertiesTypeItemProvider signaturePropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignaturePropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignaturePropertiesTypeAdapter() {
		if (signaturePropertiesTypeItemProvider == null) {
			signaturePropertiesTypeItemProvider = new SignaturePropertiesTypeItemProvider(this);
		}

		return signaturePropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignaturePropertiesType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignaturePropertiesType1ItemProvider signaturePropertiesType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignaturePropertiesType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignaturePropertiesType1Adapter() {
		if (signaturePropertiesType1ItemProvider == null) {
			signaturePropertiesType1ItemProvider = new SignaturePropertiesType1ItemProvider(this);
		}

		return signaturePropertiesType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignaturePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignaturePropertyTypeItemProvider signaturePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignaturePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignaturePropertyTypeAdapter() {
		if (signaturePropertyTypeItemProvider == null) {
			signaturePropertyTypeItemProvider = new SignaturePropertyTypeItemProvider(this);
		}

		return signaturePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignaturePropertyType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignaturePropertyType1ItemProvider signaturePropertyType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignaturePropertyType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignaturePropertyType1Adapter() {
		if (signaturePropertyType1ItemProvider == null) {
			signaturePropertyType1ItemProvider = new SignaturePropertyType1ItemProvider(this);
		}

		return signaturePropertyType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignatureType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignatureTypeItemProvider signatureTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignatureType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignatureTypeAdapter() {
		if (signatureTypeItemProvider == null) {
			signatureTypeItemProvider = new SignatureTypeItemProvider(this);
		}

		return signatureTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignatureType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignatureType1ItemProvider signatureType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignatureType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignatureType1Adapter() {
		if (signatureType1ItemProvider == null) {
			signatureType1ItemProvider = new SignatureType1ItemProvider(this);
		}

		return signatureType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignatureValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignatureValueTypeItemProvider signatureValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignatureValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignatureValueTypeAdapter() {
		if (signatureValueTypeItemProvider == null) {
			signatureValueTypeItemProvider = new SignatureValueTypeItemProvider(this);
		}

		return signatureValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignatureValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignatureValueType1ItemProvider signatureValueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignatureValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignatureValueType1Adapter() {
		if (signatureValueType1ItemProvider == null) {
			signatureValueType1ItemProvider = new SignatureValueType1ItemProvider(this);
		}

		return signatureValueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignedInfoType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignedInfoTypeItemProvider signedInfoTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignedInfoType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignedInfoTypeAdapter() {
		if (signedInfoTypeItemProvider == null) {
			signedInfoTypeItemProvider = new SignedInfoTypeItemProvider(this);
		}

		return signedInfoTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SignedInfoType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignedInfoType1ItemProvider signedInfoType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SignedInfoType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignedInfoType1Adapter() {
		if (signedInfoType1ItemProvider == null) {
			signedInfoType1ItemProvider = new SignedInfoType1ItemProvider(this);
		}

		return signedInfoType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SPKIDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SPKIDataTypeItemProvider spkiDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SPKIDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSPKIDataTypeAdapter() {
		if (spkiDataTypeItemProvider == null) {
			spkiDataTypeItemProvider = new SPKIDataTypeItemProvider(this);
		}

		return spkiDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.SPKIDataType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SPKIDataType1ItemProvider spkiDataType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.SPKIDataType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSPKIDataType1Adapter() {
		if (spkiDataType1ItemProvider == null) {
			spkiDataType1ItemProvider = new SPKIDataType1ItemProvider(this);
		}

		return spkiDataType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.TransformsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformsTypeItemProvider transformsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.TransformsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformsTypeAdapter() {
		if (transformsTypeItemProvider == null) {
			transformsTypeItemProvider = new TransformsTypeItemProvider(this);
		}

		return transformsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.TransformsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformsType1ItemProvider transformsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.TransformsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformsType1Adapter() {
		if (transformsType1ItemProvider == null) {
			transformsType1ItemProvider = new TransformsType1ItemProvider(this);
		}

		return transformsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.TransformType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformTypeItemProvider transformTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.TransformType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformTypeAdapter() {
		if (transformTypeItemProvider == null) {
			transformTypeItemProvider = new TransformTypeItemProvider(this);
		}

		return transformTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.TransformType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformType1ItemProvider transformType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.TransformType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformType1Adapter() {
		if (transformType1ItemProvider == null) {
			transformType1ItemProvider = new TransformType1ItemProvider(this);
		}

		return transformType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.X509DataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected X509DataTypeItemProvider x509DataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.X509DataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createX509DataTypeAdapter() {
		if (x509DataTypeItemProvider == null) {
			x509DataTypeItemProvider = new X509DataTypeItemProvider(this);
		}

		return x509DataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.X509DataType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected X509DataType1ItemProvider x509DataType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.X509DataType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createX509DataType1Adapter() {
		if (x509DataType1ItemProvider == null) {
			x509DataType1ItemProvider = new X509DataType1ItemProvider(this);
		}

		return x509DataType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.X509IssuerSerialType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected X509IssuerSerialTypeItemProvider x509IssuerSerialTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.X509IssuerSerialType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createX509IssuerSerialTypeAdapter() {
		if (x509IssuerSerialTypeItemProvider == null) {
			x509IssuerSerialTypeItemProvider = new X509IssuerSerialTypeItemProvider(this);
		}

		return x509IssuerSerialTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2000._09.xmldsig.X509IssuerSerialType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected X509IssuerSerialType1ItemProvider x509IssuerSerialType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2000._09.xmldsig.X509IssuerSerialType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createX509IssuerSerialType1Adapter() {
		if (x509IssuerSerialType1ItemProvider == null) {
			x509IssuerSerialType1ItemProvider = new X509IssuerSerialType1ItemProvider(this);
		}

		return x509IssuerSerialType1ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (canonicalizationMethodTypeItemProvider != null) canonicalizationMethodTypeItemProvider.dispose();
		if (canonicalizationMethodType1ItemProvider != null) canonicalizationMethodType1ItemProvider.dispose();
		if (digestMethodTypeItemProvider != null) digestMethodTypeItemProvider.dispose();
		if (digestMethodType1ItemProvider != null) digestMethodType1ItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (dsaKeyValueTypeItemProvider != null) dsaKeyValueTypeItemProvider.dispose();
		if (dsaKeyValueType1ItemProvider != null) dsaKeyValueType1ItemProvider.dispose();
		if (keyInfoTypeItemProvider != null) keyInfoTypeItemProvider.dispose();
		if (keyInfoType1ItemProvider != null) keyInfoType1ItemProvider.dispose();
		if (keyValueTypeItemProvider != null) keyValueTypeItemProvider.dispose();
		if (keyValueType1ItemProvider != null) keyValueType1ItemProvider.dispose();
		if (manifestTypeItemProvider != null) manifestTypeItemProvider.dispose();
		if (manifestType1ItemProvider != null) manifestType1ItemProvider.dispose();
		if (objectTypeItemProvider != null) objectTypeItemProvider.dispose();
		if (objectType1ItemProvider != null) objectType1ItemProvider.dispose();
		if (pgpDataTypeItemProvider != null) pgpDataTypeItemProvider.dispose();
		if (pgpDataType1ItemProvider != null) pgpDataType1ItemProvider.dispose();
		if (referenceTypeItemProvider != null) referenceTypeItemProvider.dispose();
		if (referenceType1ItemProvider != null) referenceType1ItemProvider.dispose();
		if (retrievalMethodTypeItemProvider != null) retrievalMethodTypeItemProvider.dispose();
		if (retrievalMethodType1ItemProvider != null) retrievalMethodType1ItemProvider.dispose();
		if (rsaKeyValueTypeItemProvider != null) rsaKeyValueTypeItemProvider.dispose();
		if (rsaKeyValueType1ItemProvider != null) rsaKeyValueType1ItemProvider.dispose();
		if (signatureMethodTypeItemProvider != null) signatureMethodTypeItemProvider.dispose();
		if (signatureMethodType1ItemProvider != null) signatureMethodType1ItemProvider.dispose();
		if (signaturePropertiesTypeItemProvider != null) signaturePropertiesTypeItemProvider.dispose();
		if (signaturePropertiesType1ItemProvider != null) signaturePropertiesType1ItemProvider.dispose();
		if (signaturePropertyTypeItemProvider != null) signaturePropertyTypeItemProvider.dispose();
		if (signaturePropertyType1ItemProvider != null) signaturePropertyType1ItemProvider.dispose();
		if (signatureTypeItemProvider != null) signatureTypeItemProvider.dispose();
		if (signatureType1ItemProvider != null) signatureType1ItemProvider.dispose();
		if (signatureValueTypeItemProvider != null) signatureValueTypeItemProvider.dispose();
		if (signatureValueType1ItemProvider != null) signatureValueType1ItemProvider.dispose();
		if (signedInfoTypeItemProvider != null) signedInfoTypeItemProvider.dispose();
		if (signedInfoType1ItemProvider != null) signedInfoType1ItemProvider.dispose();
		if (spkiDataTypeItemProvider != null) spkiDataTypeItemProvider.dispose();
		if (spkiDataType1ItemProvider != null) spkiDataType1ItemProvider.dispose();
		if (transformsTypeItemProvider != null) transformsTypeItemProvider.dispose();
		if (transformsType1ItemProvider != null) transformsType1ItemProvider.dispose();
		if (transformTypeItemProvider != null) transformTypeItemProvider.dispose();
		if (transformType1ItemProvider != null) transformType1ItemProvider.dispose();
		if (x509DataTypeItemProvider != null) x509DataTypeItemProvider.dispose();
		if (x509DataType1ItemProvider != null) x509DataType1ItemProvider.dispose();
		if (x509IssuerSerialTypeItemProvider != null) x509IssuerSerialTypeItemProvider.dispose();
		if (x509IssuerSerialType1ItemProvider != null) x509IssuerSerialType1ItemProvider.dispose();
	}

}
