/**
* This file is part of WSSecurityPolicyEditor.
* Copyright (c) 2011 Fraunhofer FOKUS. All Rights Reserved
* Authors: Tom Sattler
* 
* WSSecurityPolicyEditor is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* any later version.
*
* WSSecurityPolicyEditor is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with WSSecurityPolicyEditor.  If not, see <http://www.gnu.org/licenses/>.
* 
* For more information, please contact Fraunhofer FOKUS at this
* address: elankontakt [at] fokus [dot] fraunhofer [dot] de
* http://www.fokus.fraunhofer.de
*/
package org.w3._2005._08.wsaddressing.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.w3._2005._08.wsaddressing.util.AddressingAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AddressingItemProviderAdapterFactory extends AddressingAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AddressingItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.AttributedQNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributedQNameTypeItemProvider attributedQNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.AttributedQNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributedQNameTypeAdapter() {
		if (attributedQNameTypeItemProvider == null) {
			attributedQNameTypeItemProvider = new AttributedQNameTypeItemProvider(this);
		}

		return attributedQNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.AttributedQNameType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributedQNameType1ItemProvider attributedQNameType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.AttributedQNameType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributedQNameType1Adapter() {
		if (attributedQNameType1ItemProvider == null) {
			attributedQNameType1ItemProvider = new AttributedQNameType1ItemProvider(this);
		}

		return attributedQNameType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.AttributedUnsignedLongType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributedUnsignedLongTypeItemProvider attributedUnsignedLongTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.AttributedUnsignedLongType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributedUnsignedLongTypeAdapter() {
		if (attributedUnsignedLongTypeItemProvider == null) {
			attributedUnsignedLongTypeItemProvider = new AttributedUnsignedLongTypeItemProvider(this);
		}

		return attributedUnsignedLongTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.AttributedUnsignedLongType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributedUnsignedLongType1ItemProvider attributedUnsignedLongType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.AttributedUnsignedLongType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributedUnsignedLongType1Adapter() {
		if (attributedUnsignedLongType1ItemProvider == null) {
			attributedUnsignedLongType1ItemProvider = new AttributedUnsignedLongType1ItemProvider(this);
		}

		return attributedUnsignedLongType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.AttributedURIType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributedURITypeItemProvider attributedURITypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.AttributedURIType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributedURITypeAdapter() {
		if (attributedURITypeItemProvider == null) {
			attributedURITypeItemProvider = new AttributedURITypeItemProvider(this);
		}

		return attributedURITypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.AttributedURIType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributedURIType1ItemProvider attributedURIType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.AttributedURIType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributedURIType1Adapter() {
		if (attributedURIType1ItemProvider == null) {
			attributedURIType1ItemProvider = new AttributedURIType1ItemProvider(this);
		}

		return attributedURIType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.EndpointReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndpointReferenceTypeItemProvider endpointReferenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.EndpointReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndpointReferenceTypeAdapter() {
		if (endpointReferenceTypeItemProvider == null) {
			endpointReferenceTypeItemProvider = new EndpointReferenceTypeItemProvider(this);
		}

		return endpointReferenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.EndpointReferenceType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndpointReferenceType1ItemProvider endpointReferenceType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.EndpointReferenceType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndpointReferenceType1Adapter() {
		if (endpointReferenceType1ItemProvider == null) {
			endpointReferenceType1ItemProvider = new EndpointReferenceType1ItemProvider(this);
		}

		return endpointReferenceType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.MetadataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataTypeItemProvider metadataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.MetadataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataTypeAdapter() {
		if (metadataTypeItemProvider == null) {
			metadataTypeItemProvider = new MetadataTypeItemProvider(this);
		}

		return metadataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.MetadataType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataType1ItemProvider metadataType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.MetadataType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataType1Adapter() {
		if (metadataType1ItemProvider == null) {
			metadataType1ItemProvider = new MetadataType1ItemProvider(this);
		}

		return metadataType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.ProblemActionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProblemActionTypeItemProvider problemActionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.ProblemActionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProblemActionTypeAdapter() {
		if (problemActionTypeItemProvider == null) {
			problemActionTypeItemProvider = new ProblemActionTypeItemProvider(this);
		}

		return problemActionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.ProblemActionType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProblemActionType1ItemProvider problemActionType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.ProblemActionType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProblemActionType1Adapter() {
		if (problemActionType1ItemProvider == null) {
			problemActionType1ItemProvider = new ProblemActionType1ItemProvider(this);
		}

		return problemActionType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.ReferenceParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceParametersTypeItemProvider referenceParametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.ReferenceParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceParametersTypeAdapter() {
		if (referenceParametersTypeItemProvider == null) {
			referenceParametersTypeItemProvider = new ReferenceParametersTypeItemProvider(this);
		}

		return referenceParametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.ReferenceParametersType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceParametersType1ItemProvider referenceParametersType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.ReferenceParametersType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceParametersType1Adapter() {
		if (referenceParametersType1ItemProvider == null) {
			referenceParametersType1ItemProvider = new ReferenceParametersType1ItemProvider(this);
		}

		return referenceParametersType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.RelatesToType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelatesToTypeItemProvider relatesToTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.RelatesToType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelatesToTypeAdapter() {
		if (relatesToTypeItemProvider == null) {
			relatesToTypeItemProvider = new RelatesToTypeItemProvider(this);
		}

		return relatesToTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.w3._2005._08.wsaddressing.RelatesToType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelatesToType1ItemProvider relatesToType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.w3._2005._08.wsaddressing.RelatesToType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelatesToType1Adapter() {
		if (relatesToType1ItemProvider == null) {
			relatesToType1ItemProvider = new RelatesToType1ItemProvider(this);
		}

		return relatesToType1ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (attributedQNameTypeItemProvider != null) attributedQNameTypeItemProvider.dispose();
		if (attributedQNameType1ItemProvider != null) attributedQNameType1ItemProvider.dispose();
		if (attributedUnsignedLongTypeItemProvider != null) attributedUnsignedLongTypeItemProvider.dispose();
		if (attributedUnsignedLongType1ItemProvider != null) attributedUnsignedLongType1ItemProvider.dispose();
		if (attributedURITypeItemProvider != null) attributedURITypeItemProvider.dispose();
		if (attributedURIType1ItemProvider != null) attributedURIType1ItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (endpointReferenceTypeItemProvider != null) endpointReferenceTypeItemProvider.dispose();
		if (endpointReferenceType1ItemProvider != null) endpointReferenceType1ItemProvider.dispose();
		if (metadataTypeItemProvider != null) metadataTypeItemProvider.dispose();
		if (metadataType1ItemProvider != null) metadataType1ItemProvider.dispose();
		if (problemActionTypeItemProvider != null) problemActionTypeItemProvider.dispose();
		if (problemActionType1ItemProvider != null) problemActionType1ItemProvider.dispose();
		if (referenceParametersTypeItemProvider != null) referenceParametersTypeItemProvider.dispose();
		if (referenceParametersType1ItemProvider != null) referenceParametersType1ItemProvider.dispose();
		if (relatesToTypeItemProvider != null) relatesToTypeItemProvider.dispose();
		if (relatesToType1ItemProvider != null) relatesToType1ItemProvider.dispose();
	}

}
